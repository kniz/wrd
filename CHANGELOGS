# Changelogs
## v0.2.6 Mana Update
released on 05-07 2023
build#684

### major changes
* f07cce485 - core: fix: prector on generic object wasn't evaluated
* 2110f0163 - core: feat: filescope
* e7bf4db35 - core: refactor: preEvaluation
* 0024b87ac - core: feat: supports escape sequence
* a2f4e3838 - core: fix: type deduction doesn't work on add operation
* d0fa146d3 - core: feat: return integer when program exit
* d84a15aa0 - core: feat: setElem conversion for addAssign
* ea5807303 - fix: memlite: optimization of vaults has defect scenario
* 8a1184436 - core: fix: do implicit casting, not explicit when call func
* e578f6d38 - core: feat: forExpr compatiable for string type
* 48413d985 - core: feat: add 'iterate(int)' on str
* 4b54dc21f - core: feat: add 'get(seq)' substring func on str
* c931b76ed - core: feat: add char type core: feat: char concat to string
* 50933ae00 - core: feat: add byte type
* c385e8259 - core: feat: hex, octal literal expression
* c4a14b644 - core: fix: nameless arr object doesn't work
* fddac12b4 - core: feat: main() only allowed for int or void rettype
* 562a1b881 - core: fix: to define variable to void isn't allowed
* 08cfe2cec - core: fix: type deducing crashes app on wasm binary
* 17f11a852 - core: fix: 'p1 person' accesses origin incomplete object
* 71c702e09 - core: fix: keep prompt for inputting a value in emscripten
* 6bb18159f - core: refactor: a little bit become easier to understand error log
* 6c19062e7 - core: feat: let exprs contain src info
* abea245e6 - core: refactor: no warnings for running a script without pack
* 3ae8e9a8f - core: fix: carrage return in comment block shows empty line
* b79efbd0d - refactor: change file extension to 'nm'
* fbc68d5dc - core: feat: add 'input' builtin funcs
* 9a7031027 - core: feat: add builtin 'print' func
* b78d7e7da - core: fix: copyctor of array means 'deepcopy'
* f20ccb72f - doc: move documents into gh-pages branch
* ad618b52a - doc: use jekyll on _guide
* 099b13ae3 - chore: make document using jekyll, not m.css
* 9b2172b6a - wasm-frontend: feat: use tab for indentation
* 5260d32ee - namu: feat: add simple wasm ide
* 4b84f8f65 - namu: feat: add namu-wasm-fronted
* 022f7e313 - namu: fix: show errors after run script
* 8d87bf410 - fix: namu: Uncaught Runtime error
* 6aa5433ba - namu: feat: add 'bufferSrcFlag'
* b9822faa0 - fix: core: app crash on release because of null-check optimization

## v0.2.5 Mana Update
released on 02-28 2023
build#654

### major changes
* ef80970c core: fix: pointed and refer wrong address on release binary
* 0cc5e5b5 feat: supports wasm build
* f2809e22 memlite: refactor: improve speed performance for vaults using vector
* 6d98fcd5 test: feat: add 'verbose' mode
* 3025b1a9 core: doc: add example 'map.namu'
* 41471603 core: feat: add '~', '<<', '>>' more bitwise operators
* 5d11c240 core: feat: add bitwise operators, '|', '&', '^'
* 45e229a7 core: feat: add '-=', '*=', '/=', '%=' operators
* 620c4d81 core: feat: add '+=' operator
* db7da4c1 core: feat: add postfix '++', '--'
* fe79b1af core: feat: add '||' and '&&' logical binary operators
* 370aceb8 core: refactor: replace 'return' keyword to 'ret'
* d71c2aa6 core: fix: when passes argument to func, it won't be implicit casting
* 49005661 core: fix: when use 'break' without value, it causes app crash
* 9cd405fe core: fix: to use 'return' inside of for doesn't work
* c0e43409 core: fix: using 'break' inside of ifexpr doesn't work
* 304bfdb4 namu: fix: if src code declared to a pack concatnated with dot it won't start.
* 5e39b732 core: feat: add 'get' func on str
* 517eb0b0 core: feat: add 'len()' on str
* 3bdeac6c core: fix: clang isn't necessary on windows
* d39fc497 core: feat: change concept for boolean implicit casting
* be19e42c core: feat: add '!' prefix unary operator
* 36325069 core: feat: add unary prefix operators
* 67012ffa core: fix: can't parse negative number
* 519ed930 core: feat: add 'elif' keyword
* 8f0c327a core: feat: supports '<' and '>' binary operator
* 2c3807a0 core: fix: whileExpr don't loop properly
* 1dc9227e doc: add 'RSPGame' example
* 2343b9db core: feat: add logical boolean binary operators
* af4067f7 core: feat: add 'while' keyword
* 861667f8 core: fix: return is not expression
* c89fc26f core: feat: add 'if & else' keyword
* aa7f1af6 core: feat: add 'next' keyword
* 5a65aba7 core: feat: add 'break' keyword
* 9304922a core: fix: window compatibility for 'add' of arr
* e755c28f chore: build error not judged to an error

## v0.2.4 Mana Update
released on 11-03 2022
build#623

### major changes
* 0a38bb00 - core: feat: add 'ret' expr
* 5cc5b5bc - core: test: add benchmark test for native and managed
* a246d1db - core: feat: add 'mgdType'
* 62b45e00 - core: fix: for windows(MSVC) compatible
* 955ef3e7 - core: feat: verify deduction of array
* 49caeb95 - core: feat: mock a constructor
* 75ae332c - core: refactor: rename 'reduce()' to 'deduce()'
* 0988d703 - core: feat: add 'defArrayExpr'
* 270738f5 - core: feat: supports seq as a container of 'for' expr
* d112f02a - core: feat: put getElemTypeFunc and let it be more generic
* 66b5d3ae - core: feat: add 'forExpr'
* 02a690df - core: feat: 'iterate' func has been bridged
* da725997 - core: doc: defAssign is not a expression, but statement.
* b0829187 - core: fix: return type implicit casting doesn't work
* 175970dc - core: feat: add syntax for 'seq'
* a9fb1c9c - core: feat: add seq
* edee0b95 - core: fix: remove redundant func at mgd containers
* 9c916c06 - core: feat: improve exception handling for nseq
* f0104598 - core: feat: add nseq
* fdeb1350 - core: fix: element of array didn't applied to implicit casting
* 61ccc8e2 - core: feat: implicitly define an array
* 3e134b5d - core: feat: add syntax for accessing element of an array
* f04944ac - core: fix: return type of generic func doesn't change
* 32c3de8e - core: feat: add syntax for 'definition of array'
* 1418fe88 - core: feat: implement general marshaling
* 406488aa - core: feat: add more primitive marshalings
* 437c4e3d - core: feat: add 'len' to subs of array
* 4af3ed6c - core: feat: bridge can take const-member function
* e7273038 - core: feat: add tarr, arr
* a34f80e9 - bundle: feat: add 'bundle' module

## v0.2.3 Mana Update
released on 09-16 2022
build#584

### major changes
* 44e048c4 - core: feat: implement deepClone
* 1d7ee101 - core: feat: add "generalizer"
* a34a8a0e - core: feat: add new verifier using visitor
* 1b811a2e - core: feat: add graphVisitor
* d5081be2 - core: feat: add visitor
* f3e7199c - test: feat: negative() func added
* 37cb7f8c - clog: feat: add NAMU_CALLSTACK()
* 57057621 - core: feat: add generics feature
* 72c59be5 - test: refactor: rename namu to core
* 9bff0b36 - refactor: decide language name, "namu"



## v0.2.2 Mana Update
released on 07-17 2022
build#520

### major changes
* cae5b20b (HEAD -> master, origin/master, origin/HEAD) builder: feat: release outputs for Windows on stable branch
* 64b27401 wrd: fix: compatiblity issue for windows
* 6533a5a4 wrd: feat: keyword 'aka' changed to new syntax
* 12420876 wrd: refactor: replace ntype to node of getEvalType()
* 22df5700 wrd: feat: add 'aka'
* b9966971 wrd: feat: add muna
* b949093c wrd: fix: missing implicit casting
* 5e9ef105 wrd: fix: core crashed when iterpret paranthesis '(', ')'



## v0.2.1 Mana Update
released on 06-18 2022
build#495

### major changes
* 39355eb3 bundle: feat: add input() func
* b96c3c56 wrd: fix: when parse 'aka' it makes a blockexpr
* 1cc87161 wrd: refactor: add 'frame::_setObj' to store obj reference
* 2b1ffc88 wrd: feat: add frameInteract
* 5c82285a wrd: feat: add a tray between verifications
* 5d336854 wrd: fix: parser can recognize escape sequence
* f521fe13 wrd: refactor: use std::string for asStr
* 87fdf6c9 wrd: fix: 3 identifier concatenating with dot doesn't work
* ff37fd75 wrd: fix: default ctors has been added into owns area
* fc3d3c08 wrd: refactor: refine slot loading logic
* 889cdfc5 wrd: feat: mashaling for string& reference types
* 46cf36ac wrd: feat: add 4 more fundermental arithmetic operation
* 1de7e847 wrd: doc: remove prototypings
* a713c5ea wrd: refactor: preconstructor
* 8faa6738 wrd: fix: apply new refactoring of slot to TC files
* 2118cf34 wrd: refactor: pack -> slot and apply autoslot, preconstructor
* d8af510f wrd: feat: add(iter, iter, iter) new func on ucontainer
* 8493d0ec wrd: refactor: rename obj -> baseObj
* 33d1daf9 wrd: feat: add 'addExpr'
* 6b3c8eff wrd: feat: add 'asExpr'
* 88b48011 wrd: fix: type casting & as()
* f8f73429 wrd: feat: add defAssignExpr
* e854d62b wrd: refactor: change syntax of aka-deduced
* 8fd64ebf wrd: feat: add defAssign expr
* 4ab7b541 wrd: refactor: remove redundant expr, literalExpr
* c5eb689c wrd: fix: apply dum containers into primitives
* 5d33e74a wrd: feat: add assignExpr
* 623c390e wrd: feat: add 'comment' syntax



## v0.2.0 Mana Update
released on 05-14 2022
build#444

### major changes

* 9598b6ce chore: supports rpath of macos
* 6bb3b13a wrd: feat: add location info of a node when it's parsed
* eacc8855 chore: builder can make a ubuntu deb package
* c8aaae9f wrd: refactor: move prototype def into implementation files
* 849fd435 chore: replace tab to 4-width spaces
* e6f488f8 (origin/stables) chore: add github action for stable branch
* 820b0297 clog: feat: colorize logs
* 31585660 chore: fix not to build wrd twice
* 0c8ef376 wrd: fix: fix for window compatibilities
* 3021b43c wrd: refactor: rename INTERFACE macro -> ADT
* e3605229 wrd: fix: rename __super to _super_
* 9f95bd69 indep: fix: fsystem doesn't work when slash at the end
* db1740a9 wrd: feat: handling all of stream at one function call
* 0da3c982 cli: feat: starts with silent mode



## v0.1.7 Essence Update Final
released on 04-21 2022
build# 365

### major changes
* c50f7fb0 cli: feat: implement cli
* qd264caa4 wrd: feat: implement starter
* q782ba8fd wrd: feat: implement interpreter
* qbfdee5ae wrd: feat: add runExpr
* qc6305dc5 wrd: feat: err code is managed by a enum
* qe129020d wrd: feat: change concept of pack parsing
* qb9f5e95a wrd: fix: scanner couldn't recognize 'tab' token
* qf42eabf3 wrd: fix: evalType of func is the func, not return type
* q3dcf9d5d wrd: feat: verify duplicated variable defined
* qa010f8fe wrd: refactor: boost performance to verify subnodes
* q3e1b1bbf wrd: fix: member variable couldn't be verified
* qfd40cdbd wrd: feat: prints number of err
* q8b367ed7 wrd: refactor: remove doesNeedScope()
* q82d222ba wrd: feat: param can take default value and type
* q05cfee2b wrd: refactor: massive refactoring to apply 'map' to subs()
* q6752dc9f memlite: tactic instance won't be copied when binder assigned
* q59e7604d wrd: feat: apply tnmap as subs
* q403aaaf8 wrd: refactor: change how to implement immutable
* q17562542 wrd: feat: add tnmap class
* q5a1dc13e wrd: feat: add has() func on containers
* qd11c3412 wrd: fix: container shouldn't takes str as param
* q384a735f wrd: feat: add bicontainer
* q5b154aaf wrd: refactor: redesign container classes for map
* q54bff10c wrd: refactor: rename stackFrame to frames
* q0d66f3b0 wrd: refactor: pack is a obj
* q56509a60 wrd: refactor: obj class interact to frame if it needs
* q4bd8db53 wrd: feat: class can be exposed as private to verfication
* q6f7861da wrd: feat: add returnExpr
* q2ce96c59 wrd: feat: add literalExpr
* q792caf51 wrd: feat: add 'defVar' expression
* qaea9d8f9 wrd: feat: show error code on report
* qe8cba3b9 wrd: feat: parse 'block' expression
* q2da39552 wrd: feat: parsing 'pack' keyword
* q465c432b wrd: feat: make syntaxTest be resuable
* q4a66304d wrd: refactor: pack lazy importing
* qdea7b81d wrd: fix: remove '.*' syntax of aka
* q8b0f78e4 wrd: feat: can parse 'aka' keyword
* qd3ab6d6d wrd: feat: '' is for a character, "" is for a string
* qce80c805 wrd: fix: can't build release mode
* q1b50bc4a wrd: feat: parse can recognize 'func' definition
* q414a491e wrd: refactor: restructure of lowparser and parser



## v0.1.6 Essence Update 0.6
released on 09-22 2021
build# 244

### major changes
* f1c9f95c - wrd: refactor: all expr now can holds row and col info
* 7283c2ef - wrd: feat: err object can reports area of source code
* 6694792b - wrd: feat: add verifier
* c317d671 - chore: clean more folders on build directory
* e16edbe1 - wrd: feat: add dummyErrReport
* a6cfdf0e - wrd: feat: errReport has only public api to be needed
* 7106393f - wrd: refactor: rename class name 'fail' & 'failReport'
* 954f245d - wrd: refactor: improve implementation of immutable
* b12d7cfd - wrd: refactor: loose limitation of explicit ctor of binders
* 28fb0204 - wrd: fix: expr couldn't check validness when it comes to recursive
* 47862906 - wrd: feat: fill missing implementation for blockExpr
* 4d26e01d - wrd: feat: add blockExpr
* ac7dabd1 - wrd: refactor: merge and reuse 'getEvalType' for returnType of func
* 14855735 - wrd: feat: add exprMaker
* d9b25dff - wrd: refactor: change structure of 'as' casting
* 30c26ef4 - wrd: fix: remove legacy world codes
* a17b0a58 - wrd: refactor: rename interp module to wrd
* c324fe20 - interp: feat: you can specify src info for bridge API
* c42d67ee - interp: feat: add generic visitor class
* 90330081 - interp: feat: universal WRD macro.
* a8f4a749 - interp: refactor: rename srcArea to area
* f9fb8d16 - chore: publish doc has error
* d5e3e2e4 - chore: github action for publish docs


## v0.1.5 Essence Update 0.5
released on 07-31 2021
build# 233

### major changes
* interp: feat: basic structure of parser & scanner
* interp: feat: introduce new packLoader
* interp: chore: generates visualized bison reports
* doc: remove dependency to m.css


## v0.1.4 Essence Update 0.4
released on 06-26 2021
build# 226.

### major changes
* all: doc: license has been changed from LGPL to MIT
* all: chore: unittests now runs at 'bin' dir.
* interp: feat: add c++ bridge API
* interp: feat: pack importing
* interp: feat: tnchain supports deep(= nested) chaining
* interp: refactor: container components
* interp: feat: abstracts extracting origin


## v0.1.3 Essence Update 0.3
released on 05-03 2021.
build # was 209 and major changes are as follows:

### features
* implmentation of Essence Update Iteration#3.
* add basic components of ast. (obj, pack, node, ...)


## v0.01a Dust Update build# 9444
it was 02-25 2016.
Dust is the name of an update used by the 'Node Engine' project that was origin of the 'world language'.
'NodeEngine' is a result of consideration how to visualize programming elements and let users express and orgranize their thoughts in visual. Unfortunately, as a result of deliberation, I had to accept not to release to public because it's not enough useful to what I intended to be.

it has been developed by myself for quite a while, so even if it's not released officially I want to keep it below as records.

## v0.01a Dust Update build# 8392
updated on 04-24 2015. not released in public.
## v0.01a Dust Update build# 7001
updated on 03-29 2015, not released in public.
## v0.01a Dust Update build# 4429
updated on 02-02 2014, not released in public.
## v0.01a Dust Update build# 4317
updated on 10-30 2013, not released in public.
    + graphics(dx9) module was added.

## v0.01a Dust Update build# 4162
updated on 01-29 2013, not released in public.

## v0.01a Dust Update build# 3727
updated on 10-19 2012, not released in public.

## v0.01a Dust Update build# 3600
updated on 05-19 2012, not released in public.

## v0.01a Dust Update build# 3559
updated on 05-05 2012, not released in public.

## v0.01a Dust Update build# 3531
updated on 04-15 2012, not released in public.

## v0.01a Dust Update build# 3445
updated on 03-15 2012, not released in public.

## v0.00a Dust Update build# 3377
updated on 02-20 2012, not released in public.

## v0.00a Dust Update Build# 3086
updated on 01-15 2012, not released in public.

## v0.00a Dust Update Build# 2976
updated on 10-03 2011, not released in public.

## start developing NodeEngine on 2010.
